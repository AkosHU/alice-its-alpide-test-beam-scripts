#! /bin/bash
echo -n -e "\n""Processing runs" $1 for align "\n" >> analysis.log
$EUTELESCOPE/jobsub/jobsub.py --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --option NativePath=$4 --config=$5 -csv $2 converter $1
IFS=' ' read -ra runs <<< "$1"
for ((iRun=0; iRun<${#runs[@]}; iRun++)) do
  mv `printf run"%06d"-maskedPixels_*.txt ${runs[$iRun]}` $3/database/
  cd $3/logs/
  converterName=`printf converter-"%06d".zip ${runs[$iRun]}`
  unzip $converterName
  converterLogName=`printf converter-"%06d".log ${runs[$iRun]}`
  place=`cat $converterLogName | sed -n -e "s/^.*Place of telescope://p" | bc -l`
  if (($place == -100)); then
    place=`cat $converterLogName | sed -n -e "s/^.*Place of telescope from config file://p" | bc -l`
  fi
  rm *.log *.xml
  cd -
  name=`printf $3/lcio/run"%06d"-converter.slcio ${runs[$iRun]}`
  nEvent=`lcio_event_counter $name`
  if (($place > 100)); then
    echo "Noise run" ${runs[$iRun]} "in list, skipping it" >> $3/analysis.log
    continue
  elif (($nEvent < 10000)); then
    echo "Too few eventsin run" ${runs[$iRun]} ", skipping it" >> $3/analysis.log 
  else
    runsGood[${#runsGood[@]}]=${runs[$iRun]}
  fi
done
maff=0.0001
$EUTELESCOPE/jobsub/jobsub.py --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --option MaxAllowedFiringFreq=$maff --config=$5 -csv $2 hotpixel ${runsGood[@]}
if ((${#runsGood[@]} == 1)); then
  $EUTELESCOPE/jobsub/jobsub.py --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --option LCIOInputFiles=$3/lcio/run@RunNumber@-converter.slcio --config=$5 -csv $2 clustering ${runsGood[0]} 
else 
  $EUTELESCOPE/jobsub/jobsub.py --concatenate --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --option LCIOInputFiles=$3/lcio/run@RunRange@-converter.slcio --config=$5 -csv $2 clustering ${runsGood[@]} 
fi
$EUTELESCOPE/jobsub/jobsub.py --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --config=$5 -csv $2 hitmaker ${runsGood[0]}
$EUTELESCOPE/jobsub/jobsub.py --option DatabasePath=$3/database --option HistogramPath=$3/histogram --option LcioPath=$3/lcio --option LogPath=$3/logs --config=$5 -csv $2 prealign ${runsGood[0]}
./run_align_PS_7 ${runsGood[0]} $2 $3 $5
error=`echo $?`
if (($error > 0))
then 
  exit 1
fi
mv `printf $3/database/run"%06d"-prealignment.slcio ${runsGood[0]}` $3/../../prealign_$6-$7.slcio
mv `printf $3/database/run"%06d"-alignment.slcio ${runsGood[0]}` $3/../../align_$6-$7.slcio
echo Prelign file moved to $3/../../prealign_$6-$7.slcio >> $3/analysis.log
echo Align file moved to $3/../../align_$6-$7.slcio >> $3/analysis.log
echo "Finished aligning successfully" >> $3/analysis.log
echo "Finished aligning runs" $1 "successfully"  >> analysis.log
rm -r $3/lcio/ $3/database/
